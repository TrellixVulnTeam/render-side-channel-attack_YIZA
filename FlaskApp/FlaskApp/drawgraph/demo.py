import matplotlib.pyplot as plt
import numpy as np

# create some randomly ddistributed data:
data = np.random.randn(10000)
data = np.fromstring('0.60465116 0.66666667 0.7        0.8        0.66666667 0.502 0.69565217 0.66666667 0.69767442 0.72727273 0.73913043 0.6 0.68571429 0.61904762 0.7        0.63636364 0.80851064 0.68571429 0.53658537 0.93023256 0.75       0.73684211 0.88372093 0.92307692 0.71794872 0.64864865 0.61111111 0.82352941 0.61111111 0.77272727 0.76923077 0.70967742 0.59459459 0.75       0.7        0.8 0.70588235 0.81081081 0.7826087  0.66666667 0.55       0.74418605 0.73684211 0.7        0.79166667 0.71794872 0.75       0.68571429 0.56410256 0.61111111 0.64705882 0.93023256 0.7        0.73684211 0.66666667 0.93023256 0.60465116 0.79069767 0.82352941 0.78787879 0.63636364 0.80851064 0.59459459 0.73684211 0.53658537 0.55 0.87179487 0.8372093  0.63157895 0.87179487 0.76470588 0.72727273 0.70967742 0.61111111 0.70588235 0.88888889 0.81081081 0.75 0.65       0.74285714 0.62857143 0.66666667 0.95       0.91891892 0.7826087  0.53658537 0.61538462 0.88888889 0.81818182 0.73170732 0.59459459 0.8        0.95       0.76190476 0.95238095 0.92307692 0.84210526 0.81818182 0.64705882 0.59459459', dtype=float, sep=' ')

# sort the data:
data_sorted = np.sort(data)

# calculate the proportional values of samples
p = 1. * np.arange(len(data)) / (len(data) - 1)

# plot the sorted data:
fig = plt.figure()
ax1 = fig.add_subplot(121)
ax1.plot(p, data_sorted)
ax1.set_xlabel('$p$')
ax1.set_ylabel('$x$')

ax2 = fig.add_subplot(122)
ax2.plot(data_sorted, p)
ax2.set_xlabel('$x$')
ax2.set_ylabel('$p$')


plt.savefig('demo.png')